cmplx <- "+ľšč+;ľš"
lst <- "ščťýščý"
NUL <- "ťžľčť"
env <- "šžč"
sym <- "ťčýľčťýľ"
expr <- "šľžýčľťý"
df <- "ľžťčýšľýč"
A %t% num %t% char %t% df
A %t% logi
source('C:/Users/juraj/git_hub/typer/R/typer.R', encoding = 'UTF-8')
A %t% vec
A
c(A)
A %t% df %t% vec
source('C:/Users/juraj/git_hub/typer/R/typer.R', encoding = 'UTF-8')
A %t% df %t% vec
source('C:/Users/juraj/git_hub/typer/R/typer.R', encoding = 'UTF-8')
A %t% df %t% vec
A %t% df %t% vec %t% fac
A %t% num
?assign
'%t%' <- function(x,y){
if(y == num | 'num'){
return(as.numeric(x))
}
if(y == char){
return(as.character(x))
}
if(y == logi){
return(as.logical(x))
}
if(y == int){
return(as.integer(x))
}
if(y == dbl){
return(as.double(x))
}
if(y == cmplx){
return(as.complex(x))
}
if(y == lst){
return(as.list(x))
}
if(y == NUL){
return(as.null(x))
}
if(y == env){
return(as.environment(x))
}
if(y == sym){
return(as.symbol(x))
}
if(y == expr){
return(as.expression(x))
}
if(y == df){
return(as.data.frame(x))
}
if(y == vec){
return(c(x))
}
if(y == fac){
return(as.factor(x))
}
}
A %t% num  %t% char
'%t%' <- function(x,y){
if(y == num | y == 'num'){
return(as.numeric(x))
}
if(y == char){
return(as.character(x))
}
if(y == logi){
return(as.logical(x))
}
if(y == int){
return(as.integer(x))
}
if(y == dbl){
return(as.double(x))
}
if(y == cmplx){
return(as.complex(x))
}
if(y == lst){
return(as.list(x))
}
if(y == NUL){
return(as.null(x))
}
if(y == env){
return(as.environment(x))
}
if(y == sym){
return(as.symbol(x))
}
if(y == expr){
return(as.expression(x))
}
if(y == df){
return(as.data.frame(x))
}
if(y == vec){
return(c(x))
}
if(y == fac){
return(as.factor(x))
}
}
A %t% num
A %t% "num"
A %t% 'num'
.GlobalEnv
assign(x = "num", value =  "Bulgarian_constant", pos = ".GlobalEnv")
remove(num)
allow_typer <- function()
{
assign(x = "num", value =  "Bulgarian_constant", pos = ".GlobalEnv")
char <- "Croatian_constant"
logi <- "12314q"
int <- "+č+ľš+ľ"
dbl <- "ľšť+ľ"
cmplx <- "+ľšč+;ľš"
lst <- "ščťýščý"
NUL <- "ťžľčť"
env <- "šžč"
sym <- "ťčýľčťýľ"
expr <- "šľžýčľťý"
df <- "ľžťčýšľýč"
vec <- "ľžšťžčťýč"
fac <- "žčšľžščýšý"
}
allow_typer()
remove(list=ls())
'%t%' <- function(x,y){
if(y == num | y == 'num'){
return(as.numeric(x))
}
if(y == char){
return(as.character(x))
}
if(y == logi){
return(as.logical(x))
}
if(y == int){
return(as.integer(x))
}
if(y == dbl){
return(as.double(x))
}
if(y == cmplx){
return(as.complex(x))
}
if(y == lst){
return(as.list(x))
}
if(y == NUL){
return(as.null(x))
}
if(y == env){
return(as.environment(x))
}
if(y == sym){
return(as.symbol(x))
}
if(y == expr){
return(as.expression(x))
}
if(y == df){
return(as.data.frame(x))
}
if(y == vec){
return(c(x))
}
if(y == fac){
return(as.factor(x))
}
}
allow_typer <- function()
{
lapply( c( "num","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","df",
"vec","fac" ), function(i){
assign(i,value = "BULGARIAN_CONST",pos = ".GlobalEnv")
})
}
allow_typer()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
allow_typer()
allow_typer <- function()
{
warning("This will overwrite variables in your global environment, namely: ",
c( "num","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","df",
"vec","fac" ) )
stop()
lapply( c( "num","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","df",
"vec","fac" ), function(i){
assign(i,value = "BULGARIAN_CONST",pos = ".GlobalEnv")
})
}
allow_typer()
allow_typer <- function()
{
warning("This will overwrite variables in your global environment, namely: ",
c( "num\n","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","df",
"vec","fac" ) )
stop()
lapply( c( "num","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","df",
"vec","fac" ), function(i){
assign(i,value = "BULGARIAN_CONST",pos = ".GlobalEnv")
})
}
allow_typer()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
source('C:/Users/juraj/git_hub/typer/R/typer.R')
allow_typer()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
allow_typer()
allow_typer <- function()
{
warning("This will overwrite variables in your global environment, namely: \n ",
c( "num\n","char\n","logi\n",
"int\n","dbl\n","cmplx\n",
"lst\n","NUL\n","env\n",
"sym\n","expr\n","df\n",
"vec\n","fac\n" ) )
cat("Proceed anyways?")
user_in <- readlines("Yes/No - Y/N")
if(user_in == "Y")
{
lapply( c( "num","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","df",
"vec","fac" ), function(i){
assign(i,value = "BULGARIAN_CONST",pos = ".GlobalEnv")
})
}
else
{
cat("No change made, please use character typing of the form 'num'/ \"num\"")
}
}
allow_typer
allow_typer()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
allow_typer()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
allow_typer()
allow_typer()
allow_typer()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
allow_typer()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
allow_typer()
?silent()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
allow_typer()
allow_typer()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
allow_typer()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
allow_typer()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
start_typer <- function()
{
cat("This will overwrite variables in your global environment, namely: \n ",
c( "num\n","char\n","logi\n",
"int\n","dbl\n","cmplx\n",
"lst\n","NUL\n","env\n",
"sym\n","expr\n","df\n",
"vec\n","fac\n" ) )
cat("Proceed anyways?")
user_in <- readline("Yes/No - Y/N \n")
if(user_in == "Y")
{
invisible( lapply( c( "num","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","df",
"vec","fac" ), function(i){
assign(i,value = "BULGARIAN_CONST",pos = ".GlobalEnv")
}))
}
else
{
print("No change made, please use character typing of the form 'num' ")
}
}
disable_typer <- function()
{
obj_vec <- c( "num","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","df",
"vec","fac" )
remove(list = obj_vec, pos = ".GlobalEnv")
}
start_typer()
disable_typer()
A <- c("0","1","2")
as.numeric(A)
"as.numeric(A)"
eval("as.numeric(A)")
eval(unquote("as.numeric(A)"))
eval(parse = "as.numeric(A)")
?quote
substitute("as.numeric(A")
substitute("as.numeric(A)")
eval(substitute("as.numeric(A)"))
eval("as.numeric(A)")
eval(as.expression("as.numeric(A)"))
eval(as.expression(as.numeric(A)))
eval(as.numeric(A))
call <- expression(as.numeric(A))
eval(call)
call <- expression(noquote("as.numeric(A)"))
call <- noquote("as.numeric(A)")
call
eval(call)
eval(as.character(call))
fun_list <- list(as.character())
fun_list <- list(as.character(), as.numeric())
View(fun_list)
fun_list <- list(as.character, as.numeric
)
View(fun_list)
eval(fun_list[[1]])
eval(fun_list[[1]], A)
do.call(fun_list[[1]], A)
do.call(fun_list[[1]], list = (A))
do.call(fun_list[[1]], list(A))
do.call(fun_list[[2]], list(A))
g_env <- environment(".GlobalEnd")
g_env <- environment(".GlobalEnv")
g_env <- environment(.GlobalEnv)
g_env <- .GlobalEnv
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
start_typer
start_typer()
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
start_typer()
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
start_typer()
View(g_env)
list(g_env)
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
start_typer()
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
start_typer()
?exists
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
?exists
start_typer()
?df
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
start_typer()
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
start_typer()
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
start_typer()
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
start_typer()
c( "num\n","char\n","logi\n",
"int\n","dbl\n","cmplx\n",
"lst\n","NUL\n","env\n",
"sym\n","expr\n","dfm\n",
"vec\n","fac\n" ) %in% c( "num","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","dfm",
"vec","fac" )[test]
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
test<- start_typer()
c( "num\n","char\n","logi\n",
"int\n","dbl\n","cmplx\n",
"lst\n","NUL\n","env\n",
"sym\n","expr\n","dfm\n",
"vec\n","fac\n" ) %in% c( "num","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","dfm",
"vec","fac" )[test]
c( "num","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","dfm",
"vec","fac" )[test]
c( "num","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","dfm",
"vec","fac" )[test] %>% sum()
library(magrittr)
c( "num","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","dfm",
"vec","fac" )[test] %>% sum()
c( "num","char","logi",
"int","dbl","cmplx",
"lst","NUL","env",
"sym","expr","dfm",
"vec","fac" )[test] %>% as.numeric() %>% sum()
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
test<- start_typer()
start_typer()
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
start_typer()
start_typer()
start_typer()
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
start_typer()
start_typer()
remove(list=ls())
start_typer()
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
start_typer()
source('~/.active-rstudio-document')
disable_typer()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
disable_typer()
warnings()
source('~/.active-rstudio-document')
disable_typer()
start_typer()
disable_typer()
load("C:/Users/juraj/git_hub/typer/.RData")
devtools::check()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
devtools::check()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% num
source('C:/Users/juraj/git_hub/typer/R/start_typer.R')
start_typer
start_typer()
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% |num
A %t% num
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% num
A %t% char
A %t% "char"
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% num
A %t% "num"
A %t% "char"
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% "char"
A %t% "num"
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% "num"
?match
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% "num"
A %t% "char"
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% "char"
A %t% "num"
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% "num"
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% "num"
A %t% "char"
remove(list=ls())
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% "char"
A <- c("0","1","2")
A %t% "char"
A %t% "num"
A %t% "int"
A %t% "cmplx"
A %t% "dfm"
A %t% "dfm" %t% "num"
unlist(A %t% "dfm") %t% "num"
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% "dfm" %t% "unlst" %t% "num"
f<-factor(c(3.4, 1.2, 5))
as.numeric(f)
as.character(f)
as.numeric(as.character(f))
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% "dfm" %t% "unlst" %t% "num"
source('C:/Users/juraj/git_hub/typer/R/typer.R')
A %t% "dfm" %t% "unlst" %t% "num"
A <- A %t% "dfm" %t% "unlst" %t% "num"
A <- factor(1,2,7,5)
A <- factor(c(1,2,7,5))
as.numeric(A)
as.character(A)
as.complex(A)
as.logical(A)
as.environment(A)
A <- as.factor(c(1,2,7,5))
A
